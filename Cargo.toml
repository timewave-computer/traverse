# Chain-Independent ZK Storage Path Generator
[workspace]
members = [
    "crates/traverse-core",
    "crates/traverse-ethereum", 
    "crates/traverse-cli",
    "crates/traverse-valence", "crates/traverse-cosmos",
    "e2e",
]
resolver = "2"

# Root package to support examples
[package]
name = "traverse"
version = "0.1.0"
edition = "2021"
authors = ["Timewave Labs"]
license = "Apache-2.0"
repository = "https://github.com/timewave-computer/traverse"
homepage = "https://github.com/timewave-computer/traverse"
description = "Chain-independent ZK storage path generator for blockchain state verification"
keywords = ["zk", "blockchain", "ethereum", "storage", "proof"]
categories = ["cryptography", "development-tools"]

# Dependencies for examples
[dependencies]
traverse-core = { path = "crates/traverse-core" }
traverse-ethereum = { path = "crates/traverse-ethereum", optional = true }
traverse-cosmos = { path = "crates/traverse-cosmos", optional = true }
traverse-valence = { path = "crates/traverse-valence", optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
hex = { workspace = true }
tokio = { workspace = true, optional = true }

# Additional dependencies for examples
valence-coprocessor = { git = "https://github.com/timewave-computer/valence-coprocessor.git", tag = "v0.1.13", default-features = false, optional = true }
anyhow = { workspace = true, optional = true }
dotenv = { workspace = true, optional = true }

# Client feature dependencies
valence-domain-clients = { git = "https://github.com/timewave-computer/valence-domain-clients.git", branch = "main", optional = true }
base64 = { version = "0.22", optional = true }
reqwest = { version = "0.12", features = ["json"], optional = true }

# Examples
[[example]]
name = "usdt_live_proof"
path = "examples/usdt_live_proof.rs"
required-features = ["examples", "ethereum"]

[[example]]
name = "semantic_conflict_resolution"
path = "examples/semantic_conflict_resolution.rs"
required-features = ["examples", "ethereum"]

[[example]]
name = "circuit_usage"
path = "examples/circuit_usage.rs"
required-features = ["examples", "minimal"]

[[example]]
name = "semantic_business_logic"
path = "examples/semantic_business_logic.rs"
required-features = ["examples", "ethereum"]

[[example]]
name = "semantic_cli_integration"
path = "examples/semantic_cli_integration.rs"
required-features = ["examples", "ethereum"]

[[example]]
name = "valence_vault_storage"
path = "examples/valence_vault_storage.rs"
required-features = ["examples", "ethereum", "client"]

[[example]]
name = "lightweight_alloy_example"
path = "examples/lightweight_alloy_example.rs"
required-features = ["lightweight", "ethereum"]

[[example]]
name = "constrained_environment_example"
path = "examples/constrained_environment_example.rs"
required-features = ["constrained"]

[[example]]
name = "comprehensive_abi_example"
path = "examples/comprehensive_abi_example.rs"
required-features = ["lightweight", "ethereum"]

[[example]]
name = "minimal_circuit_example"
path = "examples/minimal_circuit_example.rs"
required-features = ["constrained"]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Timewave Labs"]
license = "Apache-2.0"
repository = "https://github.com/timewave-computer/traverse"
homepage = "https://github.com/timewave-computer/traverse"
description = "Chain-independent ZK storage path generator for blockchain state verification"
keywords = ["zk", "blockchain", "ethereum", "storage", "proof"]
categories = ["cryptography", "development-tools"]

[workspace.dependencies]
# Core dependencies - no_std compatible
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
hex = { version = "0.4", default-features = false, features = ["alloc"] }
sha2 = { version = "0.10", default-features = false }
keccak = { version = "0.1", default-features = false }

# CLI dependencies  
clap = { version = "4.0", features = ["derive"] }
tracing = "0.1"
tracing-subscriber = "0.3"

# Ethereum dependencies - wider version ranges
thiserror = "1.0"
tiny-keccak = { version = "2.0", features = ["keccak"] }
rlp = "0.5"
tokio = { version = "1.0", features = ["full"] }

# Test dependencies
proptest = "1.0"
tempfile = "3.0"

# Error handling
anyhow = "1.0"
dotenv = "0.15"

[features]
default = ["std", "ethereum"]

# Core feature flags
std = ["traverse-core/std", "traverse-ethereum?/std", "traverse-valence?/std", "dep:tokio"]
no-std = ["traverse-core/no-std", "traverse-valence?/no-std"]
minimal = ["traverse-core/minimal"]
wasm = ["traverse-core/wasm", "traverse-valence?/wasm"]
constrained = ["no-std", "traverse-core/constrained", "traverse-valence?/constrained"]
embedded = ["constrained", "traverse-core/embedded", "traverse-valence?/embedded"]

# Chain-specific features
ethereum = ["dep:traverse-ethereum", "traverse-ethereum?/lightweight-alloy", "dep:traverse-valence"]
cosmos = ["dep:traverse-cosmos"]

# Integration features
client = ["dep:valence-domain-clients", "dep:reqwest", "traverse-ethereum?/client"]
examples = ["dep:valence-coprocessor", "dep:anyhow", "dep:dotenv", "dep:base64"]
lightweight = ["ethereum", "traverse-ethereum?/lightweight-alloy", "traverse-valence?/lightweight-alloy", "dep:traverse-valence"] 
